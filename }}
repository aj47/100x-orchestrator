"""
        critique_response = litellm_client.chat_completion(prompt, model=CRITIQUE_MODEL)
        critique_data = json.loads(critique_response)
        return critique_data
    except Exception as e:
        logging.error(f"Error during code critique for agent {agent_id}: {e}")
        return {"valid": False, "feedback": "Error during code critique.", "suggested_changes": ""}

def main_loop():
    # ... (rest of the code remains the same) ...

                if agent_session.is_ready():
                    # ... (rest of the code remains the same) ...

                            #Critique System
                            acceptance_criteria = tasks_data['agents'][agent_id].get('acceptance_criteria')
                            if acceptance_criteria:
                                critique_iterations = tasks_data['agents'][agent_id].get('critique_iterations', 0)
                                if critique_iterations < MAX_CRITIQUE_ITERATIONS:
                                    code_submission = agent_session.get_output()
                                    session_context = f"Agent ID: {agent_id}\nTask: {agent_session.task}\nSession Logs: {session_logs}"
                                    critique_data = critique_submission(agent_id, code_submission, acceptance_criteria, session_context)
                                    
                                    if not critique_data['valid']:
                                        tasks_data['agents'][agent_id]['critique_history'] = tasks_data['agents'][agent_id].get('critique_history', []) + [critique_data]
                                        tasks_data['agents'][agent_id]['critique_iterations'] = critique_iterations + 1
                                        action = f"Apply the following changes:\n{critique_data['suggested_changes']}"
                                        if agent_session.send_message(action):
                                            logging.info(f"Agent {agent_id} is ready. Sending critique feedback: {action}")
                                        else:
                                            logging.error(f"Failed to send critique feedback to agent {agent_id}")
                                    else:
                                        tasks_data['agents'][agent_id]['status'] = 'completed'
                                        logging.info(f"Agent {agent_id} submission is valid.")
                                else:
                                    tasks_data['agents'][agent_id]['status'] = 'failed'
                                    logging.info(f"Agent {agent_id} submission failed after {MAX_CRITIQUE_ITERATIONS} critique iterations.")
                                save_tasks(tasks_data)
                            # ... (rest of the code remains the same) ...

